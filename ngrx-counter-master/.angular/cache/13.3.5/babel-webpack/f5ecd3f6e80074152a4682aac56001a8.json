{"ast":null,"code":"import { map } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let PostsService = /*#__PURE__*/(() => {\n  class PostsService {\n    constructor(http) {\n      this.http = http;\n    }\n\n    getPosts() {\n      return this.http.get(`https://vue-completecourse.firebaseio.com/posts.json`).pipe(map(data => {\n        const posts = [];\n\n        for (let key in data) {\n          posts.push(Object.assign(Object.assign({}, data[key]), {\n            id: key\n          }));\n        }\n\n        return posts;\n      }));\n    }\n\n    addPost(post) {\n      return this.http.post(`https://vue-completecourse.firebaseio.com/posts.json`, post);\n    }\n\n    updatePost(post) {\n      const postData = {\n        [post.id]: {\n          title: post.title,\n          description: post.description\n        }\n      };\n      return this.http.patch(`https://vue-completecourse.firebaseio.com/posts.json`, postData);\n    }\n\n    deletePost(id) {\n      return this.http.delete(`https://vue-completecourse.firebaseio.com/posts/${id}.json`);\n    }\n\n    getPostById(id) {\n      return this.http.get(`https://vue-completecourse.firebaseio.com/posts/${id}.json`);\n    }\n\n  }\n\n  PostsService.ɵfac = function PostsService_Factory(t) {\n    return new (t || PostsService)(i0.ɵɵinject(i1.HttpClient));\n  };\n\n  PostsService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: PostsService,\n    factory: PostsService.ɵfac,\n    providedIn: 'root'\n  });\n  return PostsService;\n})();","map":null,"metadata":{},"sourceType":"module"}